/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
            
            if (l1 != null & l2 != null) {
                int sum = (l1.val +l2.val)% 10;
                int remainder = (l1.val +l2.val) / 10;
                ListNode list = new ListNode(sum);
                ListNode temp = list;
                ListNode temp1 = l1;
                ListNode temp2 = l2;
                while (temp1.next != null & temp2.next != null) {
                    sum = (temp1.next.val + temp2.next.val + remainder) % 10;
                    remainder = (temp1.next.val + temp2.next.val + remainder) / 10;
                    temp.next = new ListNode(sum);
                    temp = temp.next;
                    temp1 = temp1.next;
                    temp2 = temp2.next;
                } 
                if (temp1.next != null) {
                    temp.next = temp1.next;
                    sum = (temp1.next.val + remainder) % 10;
                    remainder = (temp1.next.val + remainder) / 10;
                    temp1.next.val = sum;
                    temp1 = temp1.next;
                    while (temp1.next != null & remainder == 1) {
                        sum = (temp1.next.val + remainder) % 10;
                        remainder = (temp1.next.val + remainder) / 10;
                        temp1.next.val = sum;
                        temp1 = temp1.next;
                    }
                    if(remainder==1){
                        temp1.next = new ListNode(1);
                    }
                } else if (temp2.next != null) {
                    temp.next = temp2.next;
                    sum = (temp2.next.val + remainder)%10;
                    remainder = (temp2.next.val + remainder) / 10;
                    temp2.next.val = sum;
                    temp2 = temp2.next;
                    while (temp2.next != null & remainder == 1) {
                        sum = (temp2.next.val + remainder) % 10;
                        remainder = (temp2.next.val + remainder) / 10;
                        temp2.next.val = sum;
                        temp2 = temp2.next;
                    }
                    if(remainder==1){
                        temp2.next = new ListNode(1);
                    }
                }
                if (remainder == 1 & temp.next == null) {
                    temp.next = new ListNode(1);
                }
                return list;
            } else {
                return null;
            }
            
               
    }
}
